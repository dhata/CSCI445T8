#include <iostream>
#include <vector>
#include <fstream>

#include <opencv2/opencv.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/video/tracking.hpp>
#include <opencv2/legacy/legacy.hpp>

#include <opencv/highgui.h>
#include <opencv/cv.h>
#include "Util_Map.h"
#include "Particle.h"
#include "Util.h"
//#include <array>

using namespace std;
using namespace cv;

int main(int argc, char** argv){
	
	const int NUM_PARTICLES = 10;
	int x =25, y = 25;
	double angle = 0;
	
	Mat img = Mat::zeros(400,400,CV_8UC3);
	drawCircle(img, x, y, true);

	vector<Point> edges;
	vector<Point> particleShoot;
	drawMap(img,edges);
	char main_window[] = "Particle Filter";
	imshow(main_window, img);
	moveWindow( main_window, 0, 200 );
	//Create particle vector
	vector<Particle> particles;
	
	
	for (int i=0;i<NUM_PARTICLES;i++){
		Particle temp;
		particles.push_back(temp);
		particleShoot.push_back(Point(0,0));
	}
	
	char dir;
	waitKey( 100 );
	while (true){
		imshow(main_window, img);
		waitKey(100);
		cout << "[t]urn clockwise or go [f]orward?" << endl;
		cin >> dir;
		moveCircle(img, dir, angle, x, y, particles, main_window, particleShoot);
		drawParticles(img, particles, true);
	}
	return 0;
}
